#Mysql学习笔记
############################################################


########SQL聚合操作#########################################
########在公司中统计部门人数并统计总人数####################

select deptno,count(1) from emp group by deptno with rollup;


########统计人数大于1的部门#################################

select deptno,count(1) from emp group by deptno having count(1)>1;

########统计公司所有员工的薪水总额、最高和最低薪水##########

select sum(sal),max(sal),min(sal) from emp;

########查询出所有雇员的名字和所在部门的名称################

select ename,deptname from emp ,dept where emp.deptno = dept.deptno;


########查询emp中所有用户名和所在部门名称###################

select ename,deptname from emp left join dept on emp.deptno=dept.deptno;

########联合查询############################################
UNION 和 UNION ALL 的主要区别是 UNION ALL 是把结果集直接合并在一起，而 UNION 是将
UNION ALL 后的结果进行一次 DISTINCT，去除重复记录后的结果。

select deptno from emp union select deptno from dept;




##############DCL 语句主要是 DBA 用来管理系统中的对象权限时所使用，一般的开发人员很少使用。############

##########创建一个数据库用户test,密码为123,具有对mydb数据库所有表的INSERT/SELECT权限#########

grant select,insert on mydb.* to 'test'@'localhost' identified by '123';


######收回用户test的insert权限###################

revoke insert on mydb.* from 'test'@'localhost';




################Mysql数据类型#####################

对于小数的表示，MySQL 分为两种方式：浮点数和定点数。浮点数包括 float（单精度）
和 double（双精度），而定点数则只有 decimal 一种表示。定点数在 MySQL 内部以字符串形
式存放，比浮点数更精确，适合用来表示货币等精度高的数据。
浮点数后面跟“(M,D)”的用法是非标准用法，如果要用于数据库的迁移，则最好不要这么使用。
float 和 double 在不指定精度时，默认会按照实际的精度（由实际的硬件和操作系统决定）
来显示，而 decimal 在不指定精度时，默认的整数位为 10，默认的小数位为 0。


TIMESTAMP的插入和查询都受当地时区的影响，更能反应出实际的日期。而
DATETIME则只能反应出插入时当地的时区，其他时区的人查看数据必然会有误差
的。


CHAR 和 VARCHAR 很类似，都用来保存 MySQL 中较短的字符串。二者的主要区别在于存储
方式的不同：CHAR 列的长度固定为创建表时声明的长度，长度可以为从 0～255 的任何值；
而 VARCHAR 列中的值为可变长字符串，长度可以指定为 0～255 （5.0.3以前）或者 65535 （5.0.3
以后）之间的值。在检索的时候，CHAR 列删除了尾部的空格，而 VARCHAR 则保留这些空格。


ENUM 类型只允许从值集合中选取单个值，而不能一次取多个值。Set 和 ENUM 类型非常类似，
也是一个字符串对象，里面可以包含 0～64 个成员。根据成员的不同，存储上也有所不同。Set 和 ENUM 除了存储之外，最主要的区别在于Set类型一次可以选取多个成员，而 ENUM则只能选一个。Set中对于（ ' a,d,a ' ）这样包含重
复成员的集合将只取一次，写入后的结果为“a,d”。


#################MySQL常用函数###################################



############字符串函数#################

CONCAT(S1,S2,…Sn)函数：把传入的参数连接成为一个字符串。任何字符串与 NULL 进行连接的结果都将是 NULL。

INSERT(str ,x,y,instr)函数：将字符串 str 从第 x 位置开始，y 个字符长的子串替换为字符
串 instr

LOWER(str)和 UPPER(str)函数：把字符串转换成小写或大写。

LEFT(str,x)和 RIGHT(str,x)函数：分别返回字符串最左边的x个字符和最右边的x个字符。
如果第二个参数是 NULL，那么将不返回任何字符串。

LPAD(str,n ,pad)和 RPAD(str,n ,pad)函数：用字符串 pad 对 str 最左边和最右边进行填充,
直到长度为 n 个字符长度。

LTRIM(str)和 RTRIM(str)函数：去掉字符串 str 左侧和右侧空格。

REPEAT(str,x)函数：返回 str 重复 x 次的结果。

REPLACE(str,a,b)函数：用字符串 b 替换字符串 str 中所有出现的字符串 a。

TRIM(str)函数：去掉目标字符串的开头和结尾的空格。

SUBSTRING(str,x,y)函数：返回从字符串 str 中的第 x 位置起 y 个字符长度的字串。
此函数经常用来对给定字符串进行字串的提取



#############数值函数############################

ABS(x)函数：返回 x 的绝对值。

CEIL(x)函数：返回大于 x 的最大整数。

FLOOR(x)函数：返回小于 x 的最大整数，和 CEIL 的用法刚好相反。

MOD(x，y)函数：返回 x/y 的模。

RAND()函数：返回 0 到 1 内的随机值

ROUND(x,y)函数：返回参数 x 的四舍五入的有 y 位小数的值。如果是整数，将会保留 y 位数量的 0；如果不写 y，则默认 y 为 0，即将 x 四舍五入后取整。适合于将所有数字保留同样小数位的情况。

TRUNCATE(x,y)函数：返回数字 x 截断为 y 位小数的结果。




#########################日期和时间函数##########################

CURDATE()函数：返回当前日期，只包含年月日。

CURTIME()函数：返回当前时间，只包含时分秒。

NOW()函数：返回当前的日期和时间，年月日时分秒全都包含。

UNIX_TIMESTAMP(date)函数：返回日期 date 的 UNIX 时间戳。

FROM_UNIXTIME （ unixtime ） 函 数 ： 返 回 UNIXTIME 时 间 戳 的 日 期 值 ， 和
UNIX_TIMESTAMP(date)互为逆操作。

WEEK(DATE)和 YEAR(DATE)函数：前者返回所给的日期是一年中的第几周，后者返回所
给的日期是哪一年。

DATE_FORMAT(date,fmt)函数：按字符串 fmt 格式化日期 date 值，此函数能够按指定的
格式显示日期

DATEDIFF（date1，date2）函数：用来计算两个日期之间相差的天数。


#####################流程函数######################################
模拟了对职员薪水进行分类，这里首先创建并初始化一个职员薪水表
create table salary (userid int,salary decimal(9,2));
insert into salary values(1,1000),(2,2000), (3,3000),(4,4000),(5,5000), (1,null);


IF(value,t,f)函数：
select if(salary>2000,'high','low') from salary;

IFNULL(value1,value2)函数：这个函数一般用来替换 NULL 值的，我们知道 NULL 值是不
能参与数值运算的，下面这个语句就是把 NULL 值用 0 来替换。
select ifnull(salary,0) from salary;

CASE WHEN [value1] THEN[result1]…ELSE[default]END 
select case when salary<=2000 then 'low' else 'high' end from salary;


CASE [expr] WHEN [value1] THEN[result1]…ELSE[default]END 函数：这里还可以分多种情况把职
员的薪水分多个档次
select case salary when 1000 then 'low' when 2000 then 'mid' else 'high' end from salary;



######################其他常用函数########################
DATABASE()        返回当前数据库名
VERSION()         返回当前数据库版本
USER()            返回当前登录用户名
INET_ATON(IP)     返回 IP 地址的数字表示
INET_NTOA(num)    返回数字代表的 IP 地址
PASSWORD(str)     返回字符串 str 的加密版本
MD5()             返回字符串 str 的 MD5 值